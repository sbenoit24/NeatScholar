
import SwiftUI

struct ToDoListView: View {
    @Environment(\.managedObjectContext) private var viewContext
    @FetchRequest(sortDescriptors: [NSSortDescriptor(keyPath: \ToDo.title, ascending: true)],animation: .default)
    private var toDos: FetchedResults<ToDo>
    
    var body: some View {
        NavigationView {
            List {
                ForEach(toDos) { listedToDo in
                    NavigationLink(destination:
                        Text(listedToDo.title!).font(.largeTitle).padding()) {
                        Image(systemName: "book")
                        Text(listedToDo.title!)
                            .lineLimit(1)
                        
                    }
                        .foregroundColor(.blue)
                    
                }
                .onDelete(perform: deleteItems)
            }
            .navigationTitle("Classes")
            .toolbar {
                ToolbarItem {
                    NavigationLink(destination: AddTaskView()) {
                        Label("Add Class", systemImage: "plus.circle.fill")
                    }
                }
            }
        }
        
    }
    
    private func deleteItems(offsets: IndexSet) {
        withAnimation {
            offsets.map { toDos[$0] }.forEach(viewContext.delete)
            try? viewContext.save()
            
        }
    }
}

struct ToDoListView_Previews: PreviewProvider {
    static var previews: some View {
        ToDoListView()
    }
}
